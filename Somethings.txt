request方法：option：请求询问是否能够调通接口，之后再post请求

数据库字段约束问题；
测试环境与线上环境不一致：数据库版本问题？jdk，Tomcat，jar包不一致问题？
脏数据问题：服务端报500，查看日志，报空指针错误，数据库表中数据人为删除导致的
后端接口中数据错误：接口吐数据错误/数据库中数据错误/缓存中的数据错误
bug是否有重复，可进行批量修改
浏览器兼容问题
合并代码常见的问题
开发者工具中console中报错，前端打印错误日志
host就是你的服务器的IP地址，port就是你的tomcat的远程debug的端口号
考虑应用场景
APP项目中弱网测试即网络突然断开，网络信号差等异常情况
Nginx是一款web反向代理服务器，高连接并发下是Apache服务器的一个替代品
正向代理 是一个位于客户端和原始服务器(origin server)之间的服务器，
	为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，
	然后代理向原始服务器转交请求并将获得的内容返回给客户端。
	客户端必须要进行一些特别的设置才能使用正向代理。







用户层面问题：基础的操作，正确的环境
web页面：样式CSS问题，交互：js问题，文本：html问题
中间件：上传的图片读取时展示不到：负载均衡两个请求分配到不同的服务器导致，即会话保持
后端服务层：
数据库




状态码：4XX一般是客户端问题：401，是否带了正确的身份验证信息，F12-application-cookie-token
							 403，是否有权限访问
							 404，对应的url是否真实存在
		5XX一般是服务端问题： 500，服务器内部错误，配合服务器log进行定位
							 502，服务器挂了
							 503，网络过载导致的
							 504，程序执行时间过长导致的，服务端超时没有返回结果
sql:declare 声明一个变量名称，eg：declare @id int=2；作用域为该变量所在的批，批结束，变量可使用的范围结束
GO 语句进行批处理的分开
fetch用法：		SELECT 
				employee_id, 
				salary
				FROM employees
				ORDER BY 
					salary DESC
				OFFSET 5 ROWS
				FETCH NEXT 5 ROWS ONLY; 跳过前五名薪水最高的员工，然后取出接下来的五名员工
order by rand() limit 10 随机取出数据库内不同数并分页，每次排序都不相同
QPS:每秒查询量，TPS：吞吐量，并发用户数，响应时间RT，
&和&&都是逻辑与的运算符，&&还具有短路功能，即第一个表达式为false时不再计算第二个表达式


Tomcat 、Nginx、jdbc如何配置
http协议，restful风格接口，json格式，soap协议，API（application program interface）
桩，驱动，实际测试接口


Linux命令：
rz:将本地文件上传至服务器，无法上传文件夹，可多个文件上传，注意上传路径为当前文件夹路径
rz -h 查看选项说明
sz:将文件下载到本地，不可下载文件夹，需要先打包
less:从后向前查看日志信息
ps:查看进程 ps -ax|less 分页展示所有进程  退出：q




测试分析：需要哪些测试？接口？功能？性能？
测试用例-----评审
Axure 
license：zdfans/key：fZw2VoYzXakllUuLVdTH13QYWnjD6NZrxgubQkaRyxD5+HNMqdr+WZKkaa6IoE5N
git init 将该目录变为git可管理的目录
vi aaa.txt 编辑文件；编辑结束后ESC后：wq保存退出/：wq!强制保存
git config user.name 查看用户名；git config user.email 查看邮箱；
git config --global user.name'用户名'；git config --global user.email'邮箱'；
vi开始编辑，先输入i之后再进行输入操作
shell是一个命令解释器，用来管理文件和运行程序，是一个壳将操作系统与应用软件分离保护系统内核
shell脚本是一种脚本编辑语言
beanshell也是一种脚本编程，完全java编程，还有自己独特的语法

正则表达式相关：
	. 匹配任何字符串。
	+ 一次或多次
	? 非贪婪匹配，在找到第一个匹配项后停止

批量插入数据库数据：
	1.一条SQL语句插入多条数据：减少SQL语句解析的次数，减少数据库连接的I/O开销；日志量减少，降低日志刷盘的数据量和频率
	2.在事务中进行插入处理：所有插入都在执行后才进行提交操作，在事务内真正插入处理操作
	3.数据有序插入：插入记录在主键上是有序排列的，无序的记录会增大维护索引的成本
	数据量较小（1万以下）：合并数据+事务（随机）；1万以上：合并数据+事务（有序）
	批量执行更新SQL语句：把autocommit设置为off，执行update的时候，手动分批commit，分批条数限制100或200，每100条commit一次，10000个update需要100个事务，每次锁住100条数据，提升性能
	jmeter批量插入数据库数据

接口幂等性：对于同一笔业务操作，不管调用多少次，得到的结果都是一样的。增删改查中，注意增加和修改
		   解决方法：1.代码逻辑判断，分析一些前置条件；2.全局token放到Redis或jvm内存，页面跳转时获取token，一次有效性
		   多数使用场景：支付出现并发问题时

悲观锁：每次拿数据都会上锁
乐观锁：每次都不上锁，适用：写比较少的情况下，冲突很少发生时省去锁的开销，加大系统的吞吐量
日志查看命令：cat -n test.log|grep 'AaaA'



思考如何进行测试造假数据
测试数据的批量处理
重点测试点：关联关系产生的影响，不同的操作流程，模拟多样操作，边界值测试，异常操作



胡章杰呼唤着








